{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/FLStudioCloud/frontend/frontend/src/pages/RepositoriesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RepoCard from '../components/RepoCard';\nimport '../styles/RepositoriesPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepositoriesPage = () => {\n  _s();\n  const [repositories, setRepositories] = useState([{\n    name: 'React-App',\n    description: 'React-based frontend app'\n  }, {\n    name: 'Django-API',\n    description: 'Django REST API backend'\n  }, {\n    name: 'DevOps-Scripts',\n    description: 'Automation scripts for CI/CD'\n  }]);\n  const [newRepoName, setNewRepoName] = useState('');\n  const [newRepoDescription, setNewRepoDescription] = useState('');\n  const handleCreateRepo = () => {\n    if (newRepoName.trim() && newRepoDescription.trim()) {\n      setRepositories([...repositories, {\n        name: newRepoName,\n        description: newRepoDescription\n      }]);\n      setNewRepoName('');\n      setNewRepoDescription('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"repositories-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: repositories.map((repo, index) => /*#__PURE__*/_jsxDEV(RepoCard, {\n        repo: repo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-repo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Repository Name\",\n        value: newRepoName,\n        onChange: e => setNewRepoName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Repository Description\",\n        value: newRepoDescription,\n        onChange: e => setNewRepoDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateRepo,\n        children: \"Create Repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(RepositoriesPage, \"uJuFKtJ8LQIIohc0tUuTXMhU2w8=\");\n_c = RepositoriesPage;\nexport default RepositoriesPage;\nvar _c;\n$RefreshReg$(_c, \"RepositoriesPage\");","map":{"version":3,"names":["React","useState","RepoCard","jsxDEV","_jsxDEV","RepositoriesPage","_s","repositories","setRepositories","name","description","newRepoName","setNewRepoName","newRepoDescription","setNewRepoDescription","handleCreateRepo","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/FLStudioCloud/frontend/frontend/src/pages/RepositoriesPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport RepoCard from '../components/RepoCard';\nimport '../styles/RepositoriesPage.css';\n\nconst RepositoriesPage = () => {\n  const [repositories, setRepositories] = useState([\n    { name: 'React-App', description: 'React-based frontend app' },\n    { name: 'Django-API', description: 'Django REST API backend' },\n    { name: 'DevOps-Scripts', description: 'Automation scripts for CI/CD' },\n  ]);\n  const [newRepoName, setNewRepoName] = useState('');\n  const [newRepoDescription, setNewRepoDescription] = useState('');\n\n  const handleCreateRepo = () => {\n    if (newRepoName.trim() && newRepoDescription.trim()) {\n      setRepositories([\n        ...repositories,\n        { name: newRepoName, description: newRepoDescription },\n      ]);\n      setNewRepoName('');\n      setNewRepoDescription('');\n    }\n  };\n\n  return (\n    <div className=\"repositories-page\">\n      <header>\n        <h1>Your Repositories</h1>\n      </header>\n      <main>\n        {repositories.map((repo, index) => (\n          <RepoCard key={index} repo={repo} />\n        ))}\n      </main>\n      <div className=\"create-repo\">\n        <h2>Create New Repository</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Repository Name\"\n          value={newRepoName}\n          onChange={(e) => setNewRepoName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Repository Description\"\n          value={newRepoDescription}\n          onChange={(e) => setNewRepoDescription(e.target.value)}\n        />\n        <button onClick={handleCreateRepo}>Create Repository</button>\n      </div>\n    </div>\n  );\n};\n\nexport default RepositoriesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}